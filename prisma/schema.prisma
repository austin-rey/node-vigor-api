generator client {
  provider = "prisma-client-js"
  output   = "./generated/"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model diet_logs {
  id         String   @id @default(uuid()) @db.VarChar(255)
  user_id    String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Date
  meal       String   @db.VarChar(255)
  meals      meals    @relation(fields: [meal], references: [id])
  user       user     @relation(fields: [user_id], references: [id])
}

model fitness_logs {
  id              String       @id @default(uuid()) @db.VarChar(255)
  user_id         String       @db.VarChar(255)
  created_at      DateTime     @default(now()) @db.Date
  name            String?      @db.VarChar(255)
  description     String       @db.VarChar(255)
  date_of_workout DateTime     @db.Date
  workout_type    String       @db.VarChar(255)
  satisfaction    satisfaction
  workout_length  Int
  user            user         @relation(fields: [user_id], references: [id])
  workouts        workouts     @relation(fields: [workout_type], references: [id])
}

model goals {
  id                 String     @id @default(uuid()) @db.VarChar(255)
  user_id            String     @db.VarChar(255)
  created_at         DateTime   @default(now()) @db.Date
  name               String     @db.VarChar(255)
  description        String     @db.VarChar(255)
  time_of_completion DateTime   @db.Date
  type               goal_types
  status             status?
  user               user       @relation(fields: [user_id], references: [id])
}

model meals {
  id          String      @id @default(uuid()) @db.VarChar(255)
  user_id     String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Date
  name        String      @db.VarChar(255)
  description String      @db.VarChar(255)
  calories    Decimal     @db.Decimal(8, 2)
  type        meal_type
  user        user        @relation(fields: [user_id], references: [id])
  diet_logs   diet_logs[]
}

model user {
  id               String          @id @default(uuid()) @db.VarChar(255)
  first_name       String          @db.VarChar(255)
  last_name        String          @db.VarChar(255)
  email            String          @db.VarChar(255) @unique
  password         String          @db.VarChar(255)
  created_at       DateTime        @default(now()) @db.Date
  user_preferences goal_types
  weight           Int
  height           Int
  age              Int
  diet_logs        diet_logs[]
  fitness_logs     fitness_logs[]
  goals            goals[]
  meals            meals[]
  wellness_logs    wellness_logs[]
  workouts         workouts[]
}

model wellness_logs {
  id         String   @id @default(uuid()) @db.VarChar(255)
  user_id    String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Date
  wellness_level satisfaction
  user       user     @relation(fields: [user_id], references: [id])
}

model workouts {
  id           String         @id @default(uuid()) @db.VarChar(255)
  user_id      String?        @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Date
  name         String         @db.VarChar(255)
  description  String         @db.VarChar(255)
  user         user?          @relation(fields: [user_id], references: [id])
  fitness_logs fitness_logs[]
}

enum goal_types {
  fitness
  wellness
  diet
  all
}

enum meal_type {
  breakfast
  lunch
  dinner
  snack
  dessert
}

enum satisfaction {
  bad
  ok
  good
}

enum status {
  in_progress
  failed
  completed
}
